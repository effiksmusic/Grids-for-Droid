# Sequence Selection
[math]
    input1 = {{pattern_row}} * 4
    floor = _Y_VALUE
[math]
    input1 = {{pattern_column}} * 5
    floor = _X_VALUE

## Kick X
[switch]
    input1 = _KICK_VALUES_00
    input2 = _KICK_VALUES_01
    input3 = _KICK_VALUES_02
    input4 = _KICK_VALUES_03
    input5 = _KICK_VALUES_04
    offset = _X_VALUE
    output = _KICK_VALUES_A
[switch]
    input1 = _KICK_VALUES_05
    input2 = _KICK_VALUES_06
    input3 = _KICK_VALUES_07
    input4 = _KICK_VALUES_08
    input5 = _KICK_VALUES_09
    offset = _X_VALUE
    output = _KICK_VALUES_B
[switch]
    input1 = _KICK_VALUES_10
    input2 = _KICK_VALUES_11
    input3 = _KICK_VALUES_12
    input4 = _KICK_VALUES_13
    input5 = _KICK_VALUES_14
    offset = _X_VALUE
    output = _KICK_VALUES_C
[switch]
    input1 = _KICK_VALUES_15
    input2 = _KICK_VALUES_16
    input3 = _KICK_VALUES_17
    input4 = _KICK_VALUES_18
    input5 = _KICK_VALUES_19
    offset = _X_VALUE
    output = _KICK_VALUES_D

## Kick Y
[switch]
    offset = _Y_VALUE
    input1 = _KICK_VALUES_A
    input2 = _KICK_VALUES_B
    input3 = _KICK_VALUES_C
    input4 = _KICK_VALUES_D
    output = _KICK_FULL_SCALE

## Snare X
[switch]
    input1 = _SNARE_VALUES_00
    input2 = _SNARE_VALUES_01
    input3 = _SNARE_VALUES_02
    input4 = _SNARE_VALUES_03
    input5 = _SNARE_VALUES_04
    offset = _X_VALUE
    output = _SNARE_VALUES_A
[switch]
    input1 = _SNARE_VALUES_05
    input2 = _SNARE_VALUES_06
    input3 = _SNARE_VALUES_07
    input4 = _SNARE_VALUES_08
    input5 = _SNARE_VALUES_09
    offset = _X_VALUE
    output = _SNARE_VALUES_B
[switch]
    input1 = _SNARE_VALUES_10
    input2 = _SNARE_VALUES_11
    input3 = _SNARE_VALUES_12
    input4 = _SNARE_VALUES_13
    input5 = _SNARE_VALUES_14
    offset = _X_VALUE
    output = _SNARE_VALUES_C
[switch]
    input1 = _SNARE_VALUES_15
    input2 = _SNARE_VALUES_16
    input3 = _SNARE_VALUES_17
    input4 = _SNARE_VALUES_18
    input5 = _SNARE_VALUES_19
    offset = _X_VALUE
    output = _SNARE_VALUES_D

## SNARE Y
[switch]
    offset = _Y_VALUE
    input1 = _SNARE_VALUES_A
    input2 = _SNARE_VALUES_B
    input3 = _SNARE_VALUES_C
    input4 = _SNARE_VALUES_D
    output = _SNARE_FULL_SCALE

## Hihat X
[switch]
    input1 = _HIHAT_VALUES_00
    input2 = _HIHAT_VALUES_01
    input3 = _HIHAT_VALUES_02
    input4 = _HIHAT_VALUES_03
    input5 = _HIHAT_VALUES_04
    offset = _X_VALUE
    output = _HIHAT_VALUES_A
[switch]
    input1 = _HIHAT_VALUES_05
    input2 = _HIHAT_VALUES_06
    input3 = _HIHAT_VALUES_07
    input4 = _HIHAT_VALUES_08
    input5 = _HIHAT_VALUES_09
    offset = _X_VALUE
    output = _HIHAT_VALUES_B
[switch]
    input1 = _HIHAT_VALUES_10
    input2 = _HIHAT_VALUES_11
    input3 = _HIHAT_VALUES_12
    input4 = _HIHAT_VALUES_13
    input5 = _HIHAT_VALUES_14
    offset = _X_VALUE
    output = _HIHAT_VALUES_C
[switch]
    input1 = _HIHAT_VALUES_15
    input2 = _HIHAT_VALUES_16
    input3 = _HIHAT_VALUES_17
    input4 = _HIHAT_VALUES_18
    input5 = _HIHAT_VALUES_19
    offset = _X_VALUE
    output = _HIHAT_VALUES_D

## HIHAT Y
[switch]
    offset = _Y_VALUE
    input1 = _HIHAT_VALUES_A
    input2 = _HIHAT_VALUES_B
    input3 = _HIHAT_VALUES_C
    input4 = _HIHAT_VALUES_D
    output = _HIHAT_FULL_SCALE

# Threshold inputs
# Unipolar 0V - 5V (e.g. Triatt)

# Kick threshold
[copy]
    input = {{kick_density}}
    output = _KICK_THRESHOLD_RAW
[math]
    input1 = _KICK_THRESHOLD_RAW
    input2 = 5V
    minimum = _KICK_THRESHOLD_CEIL
[math]
    input1 = _KICK_THRESHOLD_CEIL
    input2 = 0V
    maximum = _KICK_THRESHOLD_FLOOR
[copy]
    input = 5V - _KICK_THRESHOLD_FLOOR
    minimum = 0.02V
    output = _KICK_THRESHOLD

# Snare threshold
[copy]
    input = {{snare_density}}
    output = _SNARE_THRESHOLD_RAW
[math]
    input1 = _SNARE_THRESHOLD_RAW
    input2 = 5V
    minimum = _SNARE_THRESHOLD_CEIL
[math]
    input1 = _SNARE_THRESHOLD_CEIL
    input2 = 0V
    maximum = _SNARE_THRESHOLD_FLOOR
[copy]
    input = 5V - _SNARE_THRESHOLD_FLOOR
    minimum = 0.02V
    output = _SNARE_THRESHOLD

# HiHat threshold
[copy]
    input = {{hihat_density}}
    output = _HIHAT_THRESHOLD_RAW
[math]
    input1 = _HIHAT_THRESHOLD_RAW
    input2 = 5V
    minimum = _HIHAT_THRESHOLD_CEIL
[math]
    input1 = _HIHAT_THRESHOLD_CEIL
    input2 = 0V
    maximum = _HIHAT_THRESHOLD_FLOOR
[copy]
    input = 5V - _HIHAT_THRESHOLD_FLOOR
    minimum = 0.02V
    output = _HIHAT_THRESHOLD

# Kick beats
[math]
    input1 =  _KICK_FULL_SCALE
    input2 =  255
    quotient = _KICK_ZERO_TO_ONE
[math]
    input1 =  _KICK_ZERO_TO_ONE
    input2 =  5V
    product = _KICK_ZERO_TO_FIVE
[compare]
    input = _KICK_ZERO_TO_FIVE
    compare = _KICK_THRESHOLD
    precision = 0.001
    ifless = 0
    else = 1
    output = {{kick}}

# Kick accents
[compare]
    input = _KICK_ZERO_TO_FIVE
    compare = _KICK_THRESHOLD
    precision = 0.001
    ifless = 0
    else = _KICK_ZERO_TO_FIVE
    output = _KICK_ACCENT_VALUES
[compare]
    input = _KICK_ACCENT_VALUES
    compare = 3.75V # 75% of 5V
    precision = 0.001
    ifless = 0
    else = 1
    output = {{kick_accent}}

# Snare beats
[math]
    input1 =  _SNARE_FULL_SCALE
    input2 =  255
    quotient = _SNARE_ZERO_TO_ONE
[math]
    input1 =  _SNARE_ZERO_TO_ONE
    input2 =  5V
    product = _SNARE_ZERO_TO_FIVE
[compare]
    input = _SNARE_ZERO_TO_FIVE
    compare = _SNARE_THRESHOLD
    precision = 0.001
    ifless = 0
    else = 1
    output = {{snare}}

# Snare accents
[compare]
    input = _SNARE_ZERO_TO_FIVE
    compare = _SNARE_THRESHOLD
    precision = 0.001
    ifless = 0
    else = _SNARE_ZERO_TO_FIVE
    output = _SNARE_ACCENT_VALUES
[compare]
    input = _SNARE_ACCENT_VALUES
    compare = 3.75V # 75% of 5V
    precision = 0.001
    ifless = 0
    else = 1
    output = {{snare_accent}}

# HiHat beats
[math]
    input1 =  _HIHAT_FULL_SCALE
    input2 =  255
    quotient = _HIHAT_ZERO_TO_ONE
[math]
    input1 =  _HIHAT_ZERO_TO_ONE
    input2 =  5V
    product = _HIHAT_ZERO_TO_FIVE
[compare]
    input = _HIHAT_ZERO_TO_FIVE
    compare = _HIHAT_THRESHOLD
    precision = 0.001
    ifless = 0
    else = 1
    output = {{hihat}}
# HiHat accents
[compare]
    input = _HIHAT_ZERO_TO_FIVE
    compare = _HIHAT_THRESHOLD
    precision = 0.001
    ifless = 0
    else = _HIHAT_ZERO_TO_FIVE
    output = _HIHAT_ACCENT_VALUES
[compare]
    input = _HIHAT_ACCENT_VALUES
    compare = 3.75V # 75% of 5V
    precision = 0.001
    ifless = 0
    else = 1
    output = {{hihat_accent}}